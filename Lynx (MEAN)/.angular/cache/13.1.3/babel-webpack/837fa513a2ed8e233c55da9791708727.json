{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\Repositories\\\\Web-Projects\\\\Lynx (MEAN)\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nexport const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (audioParam, nativeOfflineAudioContext, nativeAudioParam) {\n      const audioParamConnections = getAudioParamConnections(audioParam);\n      yield Promise.all(Array.from(audioParamConnections.activeInputs).map( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* ([source, output]) {\n          const audioNodeRenderer = getAudioNodeRenderer(source);\n          const renderedNativeAudioNode = yield audioNodeRenderer.render(source, nativeOfflineAudioContext);\n\n          if (!isPartOfACycle(source)) {\n            renderedNativeAudioNode.connect(nativeAudioParam, output);\n          }\n        });\n\n        return function (_x4) {\n          return _ref2.apply(this, arguments);\n        };\n      }()));\n    });\n\n    return function (_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["D:/Repositories/Web-Projects/Lynx (MEAN)/node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js"],"names":["createRenderInputsOfAudioParam","getAudioNodeRenderer","getAudioParamConnections","isPartOfACycle","audioParam","nativeOfflineAudioContext","nativeAudioParam","audioParamConnections","Promise","all","Array","from","activeInputs","map","source","output","audioNodeRenderer","renderedNativeAudioNode","render","connect"],"mappings":";AAAA,OAAO,MAAMA,8BAA8B,GAAG,CAACC,oBAAD,EAAuBC,wBAAvB,EAAiDC,cAAjD,KAAoE;AAC9G;AAAA,iCAAO,WAAOC,UAAP,EAAmBC,yBAAnB,EAA8CC,gBAA9C,EAAmE;AACtE,YAAMC,qBAAqB,GAAGL,wBAAwB,CAACE,UAAD,CAAtD;AACA,YAAMI,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,IAAN,CAAWJ,qBAAqB,CAACK,YAAjC,EAA+CC,GAA/C;AAAA,sCAAmD,WAAO,CAACC,MAAD,EAASC,MAAT,CAAP,EAA4B;AAC7F,gBAAMC,iBAAiB,GAAGf,oBAAoB,CAACa,MAAD,CAA9C;AACA,gBAAMG,uBAAuB,SAASD,iBAAiB,CAACE,MAAlB,CAAyBJ,MAAzB,EAAiCT,yBAAjC,CAAtC;;AACA,cAAI,CAACF,cAAc,CAACW,MAAD,CAAnB,EAA6B;AACzBG,YAAAA,uBAAuB,CAACE,OAAxB,CAAgCb,gBAAhC,EAAkDS,MAAlD;AACH;AACJ,SANiB;;AAAA;AAAA;AAAA;AAAA,UAAZ,CAAN;AAOH,KATD;;AAAA;AAAA;AAAA;AAAA;AAUH,CAXM","sourcesContent":["export const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {\n    return async (audioParam, nativeOfflineAudioContext, nativeAudioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n            if (!isPartOfACycle(source)) {\n                renderedNativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }));\n    };\n};\n"]},"metadata":{},"sourceType":"module"}