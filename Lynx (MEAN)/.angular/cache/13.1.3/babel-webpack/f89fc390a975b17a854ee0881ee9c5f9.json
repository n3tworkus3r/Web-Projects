{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\Repositories\\\\Web-Projects\\\\Lynx (MEAN)\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nexport const createAudioDestinationNodeRenderer = renderInputsOfAudioNode => {\n  const renderedNativeAudioDestinationNodes = new WeakMap();\n\n  const createAudioDestinationNode = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (proxy, nativeOfflineAudioContext) {\n      const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n      renderedNativeAudioDestinationNodes.set(nativeOfflineAudioContext, nativeAudioDestinationNode);\n      yield renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode);\n      return nativeAudioDestinationNode;\n    });\n\n    return function createAudioDestinationNode(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return {\n    render(proxy, nativeOfflineAudioContext) {\n      const renderedNativeAudioDestinationNode = renderedNativeAudioDestinationNodes.get(nativeOfflineAudioContext);\n\n      if (renderedNativeAudioDestinationNode !== undefined) {\n        return Promise.resolve(renderedNativeAudioDestinationNode);\n      }\n\n      return createAudioDestinationNode(proxy, nativeOfflineAudioContext);\n    }\n\n  };\n};","map":{"version":3,"sources":["D:/Repositories/Web-Projects/Lynx (MEAN)/node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js"],"names":["createAudioDestinationNodeRenderer","renderInputsOfAudioNode","renderedNativeAudioDestinationNodes","WeakMap","createAudioDestinationNode","proxy","nativeOfflineAudioContext","nativeAudioDestinationNode","destination","set","render","renderedNativeAudioDestinationNode","get","undefined","Promise","resolve"],"mappings":";AAAA,OAAO,MAAMA,kCAAkC,GAAIC,uBAAD,IAA6B;AAC3E,QAAMC,mCAAmC,GAAG,IAAIC,OAAJ,EAA5C;;AACA,QAAMC,0BAA0B;AAAA,iCAAG,WAAOC,KAAP,EAAcC,yBAAd,EAA4C;AAC3E,YAAMC,0BAA0B,GAAGD,yBAAyB,CAACE,WAA7D;AACAN,MAAAA,mCAAmC,CAACO,GAApC,CAAwCH,yBAAxC,EAAmEC,0BAAnE;AACA,YAAMN,uBAAuB,CAACI,KAAD,EAAQC,yBAAR,EAAmCC,0BAAnC,CAA7B;AACA,aAAOA,0BAAP;AACH,KAL+B;;AAAA,oBAA1BH,0BAA0B;AAAA;AAAA;AAAA,KAAhC;;AAMA,SAAO;AACHM,IAAAA,MAAM,CAACL,KAAD,EAAQC,yBAAR,EAAmC;AACrC,YAAMK,kCAAkC,GAAGT,mCAAmC,CAACU,GAApC,CAAwCN,yBAAxC,CAA3C;;AACA,UAAIK,kCAAkC,KAAKE,SAA3C,EAAsD;AAClD,eAAOC,OAAO,CAACC,OAAR,CAAgBJ,kCAAhB,CAAP;AACH;;AACD,aAAOP,0BAA0B,CAACC,KAAD,EAAQC,yBAAR,CAAjC;AACH;;AAPE,GAAP;AASH,CAjBM","sourcesContent":["export const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {\n    const renderedNativeAudioDestinationNodes = new WeakMap();\n    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n        renderedNativeAudioDestinationNodes.set(nativeOfflineAudioContext, nativeAudioDestinationNode);\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode);\n        return nativeAudioDestinationNode;\n    };\n    return {\n        render(proxy, nativeOfflineAudioContext) {\n            const renderedNativeAudioDestinationNode = renderedNativeAudioDestinationNodes.get(nativeOfflineAudioContext);\n            if (renderedNativeAudioDestinationNode !== undefined) {\n                return Promise.resolve(renderedNativeAudioDestinationNode);\n            }\n            return createAudioDestinationNode(proxy, nativeOfflineAudioContext);\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}