{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\Repositories\\\\Web-Projects\\\\Lynx (MEAN)\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nexport const createIsSupportedPromise = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (cacheTestResult, testAudioBufferCopyChannelMethodsSubarraySupport, testAudioContextCloseMethodSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextOptionsSupport, testAudioNodeConnectMethodSupport, testAudioWorkletProcessorNoOutputsSupport, testChannelMergerNodeChannelCountSupport, testConstantSourceNodeAccurateSchedulingSupport, testConvolverNodeBufferReassignabilitySupport, testConvolverNodeChannelCountSupport, testDomExceptionContrucorSupport, testIsSecureContextSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testStereoPannerNodeDefaultValueSupport, testTransferablesSupport) {\n    if (cacheTestResult(testAudioBufferCopyChannelMethodsSubarraySupport, testAudioBufferCopyChannelMethodsSubarraySupport) && cacheTestResult(testAudioContextCloseMethodSupport, testAudioContextCloseMethodSupport) && cacheTestResult(testAudioContextOptionsSupport, testAudioContextOptionsSupport) && cacheTestResult(testAudioNodeConnectMethodSupport, testAudioNodeConnectMethodSupport) && cacheTestResult(testChannelMergerNodeChannelCountSupport, testChannelMergerNodeChannelCountSupport) && cacheTestResult(testConstantSourceNodeAccurateSchedulingSupport, testConstantSourceNodeAccurateSchedulingSupport) && cacheTestResult(testConvolverNodeBufferReassignabilitySupport, testConvolverNodeBufferReassignabilitySupport) && cacheTestResult(testConvolverNodeChannelCountSupport, testConvolverNodeChannelCountSupport) && cacheTestResult(testDomExceptionContrucorSupport, testDomExceptionContrucorSupport) && cacheTestResult(testIsSecureContextSupport, testIsSecureContextSupport) && cacheTestResult(testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport)) {\n      const results = yield Promise.all([cacheTestResult(testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport), cacheTestResult(testAudioWorkletProcessorNoOutputsSupport, testAudioWorkletProcessorNoOutputsSupport), cacheTestResult(testStereoPannerNodeDefaultValueSupport, testStereoPannerNodeDefaultValueSupport), cacheTestResult(testTransferablesSupport, testTransferablesSupport)]);\n      return results.every(result => result);\n    }\n\n    return false;\n  });\n\n  return function createIsSupportedPromise(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11, _x12, _x13, _x14, _x15, _x16) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["D:/Repositories/Web-Projects/Lynx (MEAN)/node_modules/standardized-audio-context/build/es2019/factories/is-supported-promise.js"],"names":["createIsSupportedPromise","cacheTestResult","testAudioBufferCopyChannelMethodsSubarraySupport","testAudioContextCloseMethodSupport","testAudioContextDecodeAudioDataMethodTypeErrorSupport","testAudioContextOptionsSupport","testAudioNodeConnectMethodSupport","testAudioWorkletProcessorNoOutputsSupport","testChannelMergerNodeChannelCountSupport","testConstantSourceNodeAccurateSchedulingSupport","testConvolverNodeBufferReassignabilitySupport","testConvolverNodeChannelCountSupport","testDomExceptionContrucorSupport","testIsSecureContextSupport","testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport","testStereoPannerNodeDefaultValueSupport","testTransferablesSupport","results","Promise","all","every","result"],"mappings":";AAAA,OAAO,MAAMA,wBAAwB;AAAA,+BAAG,WAAOC,eAAP,EAAwBC,gDAAxB,EAA0EC,kCAA1E,EAA8GC,qDAA9G,EAAqKC,8BAArK,EAAqMC,iCAArM,EAAwOC,yCAAxO,EAAmRC,wCAAnR,EAA6TC,+CAA7T,EAA8WC,6CAA9W,EAA6ZC,oCAA7Z,EAAmcC,gCAAnc,EAAqeC,0BAAre,EAAigBC,iEAAjgB,EAAokBC,uCAApkB,EAA6mBC,wBAA7mB,EAA0oB;AAC9qB,QAAIf,eAAe,CAACC,gDAAD,EAAmDA,gDAAnD,CAAf,IACAD,eAAe,CAACE,kCAAD,EAAqCA,kCAArC,CADf,IAEAF,eAAe,CAACI,8BAAD,EAAiCA,8BAAjC,CAFf,IAGAJ,eAAe,CAACK,iCAAD,EAAoCA,iCAApC,CAHf,IAIAL,eAAe,CAACO,wCAAD,EAA2CA,wCAA3C,CAJf,IAKAP,eAAe,CAACQ,+CAAD,EAAkDA,+CAAlD,CALf,IAMAR,eAAe,CAACS,6CAAD,EAAgDA,6CAAhD,CANf,IAOAT,eAAe,CAACU,oCAAD,EAAuCA,oCAAvC,CAPf,IAQAV,eAAe,CAACW,gCAAD,EAAmCA,gCAAnC,CARf,IASAX,eAAe,CAACY,0BAAD,EAA6BA,0BAA7B,CATf,IAUAZ,eAAe,CAACa,iEAAD,EAAoEA,iEAApE,CAVnB,EAU2J;AACvJ,YAAMG,OAAO,SAASC,OAAO,CAACC,GAAR,CAAY,CAC9BlB,eAAe,CAACG,qDAAD,EAAwDA,qDAAxD,CADe,EAE9BH,eAAe,CAACM,yCAAD,EAA4CA,yCAA5C,CAFe,EAG9BN,eAAe,CAACc,uCAAD,EAA0CA,uCAA1C,CAHe,EAI9Bd,eAAe,CAACe,wBAAD,EAA2BA,wBAA3B,CAJe,CAAZ,CAAtB;AAMA,aAAOC,OAAO,CAACG,KAAR,CAAeC,MAAD,IAAYA,MAA1B,CAAP;AACH;;AACD,WAAO,KAAP;AACH,GArBoC;;AAAA,kBAAxBrB,wBAAwB;AAAA;AAAA;AAAA,GAA9B","sourcesContent":["export const createIsSupportedPromise = async (cacheTestResult, testAudioBufferCopyChannelMethodsSubarraySupport, testAudioContextCloseMethodSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextOptionsSupport, testAudioNodeConnectMethodSupport, testAudioWorkletProcessorNoOutputsSupport, testChannelMergerNodeChannelCountSupport, testConstantSourceNodeAccurateSchedulingSupport, testConvolverNodeBufferReassignabilitySupport, testConvolverNodeChannelCountSupport, testDomExceptionContrucorSupport, testIsSecureContextSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testStereoPannerNodeDefaultValueSupport, testTransferablesSupport) => {\n    if (cacheTestResult(testAudioBufferCopyChannelMethodsSubarraySupport, testAudioBufferCopyChannelMethodsSubarraySupport) &&\n        cacheTestResult(testAudioContextCloseMethodSupport, testAudioContextCloseMethodSupport) &&\n        cacheTestResult(testAudioContextOptionsSupport, testAudioContextOptionsSupport) &&\n        cacheTestResult(testAudioNodeConnectMethodSupport, testAudioNodeConnectMethodSupport) &&\n        cacheTestResult(testChannelMergerNodeChannelCountSupport, testChannelMergerNodeChannelCountSupport) &&\n        cacheTestResult(testConstantSourceNodeAccurateSchedulingSupport, testConstantSourceNodeAccurateSchedulingSupport) &&\n        cacheTestResult(testConvolverNodeBufferReassignabilitySupport, testConvolverNodeBufferReassignabilitySupport) &&\n        cacheTestResult(testConvolverNodeChannelCountSupport, testConvolverNodeChannelCountSupport) &&\n        cacheTestResult(testDomExceptionContrucorSupport, testDomExceptionContrucorSupport) &&\n        cacheTestResult(testIsSecureContextSupport, testIsSecureContextSupport) &&\n        cacheTestResult(testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport)) {\n        const results = await Promise.all([\n            cacheTestResult(testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport),\n            cacheTestResult(testAudioWorkletProcessorNoOutputsSupport, testAudioWorkletProcessorNoOutputsSupport),\n            cacheTestResult(testStereoPannerNodeDefaultValueSupport, testStereoPannerNodeDefaultValueSupport),\n            cacheTestResult(testTransferablesSupport, testTransferablesSupport)\n        ]);\n        return results.every((result) => result);\n    }\n    return false;\n};\n"]},"metadata":{},"sourceType":"module"}